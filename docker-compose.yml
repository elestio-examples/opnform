version: "3.7"

services:
  minio:
    image: minio/minio
    restart: always
    command: server /data
    ports:
      - "172.17.0.1:9999:9000"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: ${ADMIN_PASSWORD}
    volumes:
      - ./opnform/s3_data:/data
  # This service just makes sure a bucket with the right policies is created
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc config host add minio http://minio:9000 minio ${ADMIN_PASSWORD};
      /usr/bin/mc mb minio/opnform;
      /usr/bin/mc anonymous set public minio/opnform/public;
      exit 0;
      "

  api: &api
    image: jhumanj/opnform-api:$SOFTWARE_VERSION_TAG
    restart: always
    environment: &api-environment  # Add this anchor
      DB_HOST: $DB_HOST
      REDIS_HOST: redis
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_CONNECTION: ${DB_CONNECTION:-pgsql}
      FILESYSTEM_DISK: local
      LOCAL_FILESYSTEM_VISIBILITY: public
    env_file: 
    - ./.env
    volumes:
    - ./storage:/usr/share/nginx/html/storage:rw
    - ./.env:/usr/share/nginx/html/.env

  api-worker:
    image: jhumanj/opnform-api:$SOFTWARE_VERSION_TAG
    command: php artisan queue:work
    restart: always
    environment:
      <<: *api-environment
      IS_API_WORKER: "true"
    env_file:
    - ./.env
    volumes:
    - ./opnform/opnform_storage:/usr/share/nginx/html/storage:rw

  ui:
    image: jhumanj/opnform-client:$SOFTWARE_VERSION_TAG
    restart: always
    env_file: 
    - ./.env
    volumes:
      - ./.env:/app/.env

  ingress:
    image: nginx:1
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/templates/default.conf.template
    ports:
      - 172.17.0.1:35551:80

  redis:
    image: elestio/redis:7.0
    restart: always
    volumes:
      - ./opnform/redis-data:/data

  db:
    image: elestio/postgres:16
    restart: always
    volumes:
      - ./opnform/postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "172.17.0.1:27779:5432"

  pgadmin4:
    image: elestio/pgadmin:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${ADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 8080
    ports:
      - "172.17.0.1:49969:8080"
    volumes:
      - ./servers.json:/pgadmin4/servers.json
